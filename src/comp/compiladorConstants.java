/* Generated By:JavaCC: Do not edit this line. compiladorConstants.java */
package comp;


/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface compiladorConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int PR_PCK = 1;
  /** RegularExpression Id. */
  int PR_SYS = 2;
  /** RegularExpression Id. */
  int PR_OUT = 3;
  /** RegularExpression Id. */
  int PR_PRT = 4;
  /** RegularExpression Id. */
  int PR_PRTL = 5;
  /** RegularExpression Id. */
  int PR_IMP = 6;
  /** RegularExpression Id. */
  int PR_CLS = 7;
  /** RegularExpression Id. */
  int PR_PUB = 8;
  /** RegularExpression Id. */
  int PR_STC = 9;
  /** RegularExpression Id. */
  int PR_VOID = 10;
  /** RegularExpression Id. */
  int PR_MAIN = 11;
  /** RegularExpression Id. */
  int PR_RTN = 12;
  /** RegularExpression Id. */
  int PR_NULL = 13;
  /** RegularExpression Id. */
  int PR_NEW = 14;
  /** RegularExpression Id. */
  int PR_EXT = 15;
  /** RegularExpression Id. */
  int PR_THR = 16;
  /** RegularExpression Id. */
  int PR_BREAKE = 17;
  /** RegularExpression Id. */
  int PR_CON = 18;
  /** RegularExpression Id. */
  int PR_SUPER = 19;
  /** RegularExpression Id. */
  int PR_THIS = 20;
  /** RegularExpression Id. */
  int PR_ABS = 21;
  /** RegularExpression Id. */
  int PR_INT = 22;
  /** RegularExpression Id. */
  int PR_SYN = 23;
  /** RegularExpression Id. */
  int PR_DFT = 24;
  /** RegularExpression Id. */
  int CICL_DO = 25;
  /** RegularExpression Id. */
  int CICL_WHI = 26;
  /** RegularExpression Id. */
  int CICL_FOR = 27;
  /** RegularExpression Id. */
  int CONDI_ELSE = 28;
  /** RegularExpression Id. */
  int CONDI_IF = 29;
  /** RegularExpression Id. */
  int CONDI_SWT = 30;
  /** RegularExpression Id. */
  int CONDI_IFELS = 31;
  /** RegularExpression Id. */
  int CONDI_CASE = 32;
  /** RegularExpression Id. */
  int TIPACESS_PRO = 33;
  /** RegularExpression Id. */
  int TIPDAT_INT = 34;
  /** RegularExpression Id. */
  int TIPDAT_DOU = 35;
  /** RegularExpression Id. */
  int TIPDAT_FLO = 36;
  /** RegularExpression Id. */
  int TIPDAT_CHAR = 37;
  /** RegularExpression Id. */
  int TIPDAT_LONG = 38;
  /** RegularExpression Id. */
  int TIPDAT_BYTE = 39;
  /** RegularExpression Id. */
  int TIPDAT_BOOLE = 40;
  /** RegularExpression Id. */
  int TIPDAT_STR = 41;
  /** RegularExpression Id. */
  int TIPDAT_SHR = 42;
  /** RegularExpression Id. */
  int BOOLE_TRUE = 43;
  /** RegularExpression Id. */
  int BOOLE_FALSE = 44;
  /** RegularExpression Id. */
  int ERROR_TRY = 45;
  /** RegularExpression Id. */
  int ERROR_CATCH = 46;
  /** RegularExpression Id. */
  int OPE_MAYOR = 47;
  /** RegularExpression Id. */
  int OPE_MENOR = 48;
  /** RegularExpression Id. */
  int OPE_MAYORIGUAL = 49;
  /** RegularExpression Id. */
  int OPE_MENORIGUAL = 50;
  /** RegularExpression Id. */
  int OPE_DIFERENTE = 51;
  /** RegularExpression Id. */
  int OPE_DOBLEIGUAL = 52;
  /** RegularExpression Id. */
  int OPE_AND = 53;
  /** RegularExpression Id. */
  int OPEARI_SUMA = 54;
  /** RegularExpression Id. */
  int OPEARI_RESTA = 55;
  /** RegularExpression Id. */
  int OPEARI_DIV = 56;
  /** RegularExpression Id. */
  int OPEARI_MODULAR = 57;
  /** RegularExpression Id. */
  int OPEARI_MULTI = 58;
  /** RegularExpression Id. */
  int OPEARI_INCREMENTO = 59;
  /** RegularExpression Id. */
  int OPEARI_DECREMENTO = 60;
  /** RegularExpression Id. */
  int OPEARI_POTENCIA = 61;
  /** RegularExpression Id. */
  int OTROS_ASIG = 62;
  /** RegularExpression Id. */
  int OTROS_LLAVEINI = 63;
  /** RegularExpression Id. */
  int OTROS_LLAVEFIN = 64;
  /** RegularExpression Id. */
  int OTROS_CORCHABRIR = 65;
  /** RegularExpression Id. */
  int OTROS_CORCHCIERRE = 66;
  /** RegularExpression Id. */
  int OTROS_PARENABRIR = 67;
  /** RegularExpression Id. */
  int OTROS_PARENCIERRE = 68;
  /** RegularExpression Id. */
  int OTROS_COMSIMPLE = 69;
  /** RegularExpression Id. */
  int OTROS_COMDOB = 70;
  /** RegularExpression Id. */
  int OTROS_PUNCOMA = 71;
  /** RegularExpression Id. */
  int OTROS_DOSPUN = 72;
  /** RegularExpression Id. */
  int NUMERO = 73;
  /** RegularExpression Id. */
  int IDENTIFICADOR = 74;
  /** RegularExpression Id. */
  int NUMBER = 75;
  /** RegularExpression Id. */
  int CHARAC = 76;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"package\"",
    "\"System\"",
    "\"out\"",
    "\"print\"",
    "\"println\"",
    "\"import\"",
    "\"class\"",
    "\"public\"",
    "\"static\"",
    "\"void\"",
    "\"main\"",
    "\"return\"",
    "\"null\"",
    "\"new\"",
    "\"extense\"",
    "\"throw\"",
    "\"breake\"",
    "\"continue\"",
    "\"super\"",
    "\"this\"",
    "\"abstract\"",
    "\"interface\"",
    "\"synchronized\"",
    "\"default\"",
    "\"do\"",
    "\"while\"",
    "\"for\"",
    "\"else\"",
    "\"if\"",
    "\"switch\"",
    "\"ifelse\"",
    "\"case\"",
    "\"protected\"",
    "\"int\"",
    "\"double\"",
    "\"float\"",
    "\"char\"",
    "\"long\"",
    "\"byte\"",
    "\"boolean\"",
    "\"String\"",
    "\"short\"",
    "\"true\"",
    "\"false\"",
    "\"try\"",
    "\"catch\"",
    "\">\"",
    "\"<\"",
    "\">=\"",
    "\"<=\"",
    "\"!=\"",
    "\"==\"",
    "\"&&\"",
    "\"+\"",
    "\"-\"",
    "\"/\"",
    "\"%\"",
    "\"*\"",
    "\"++\"",
    "\"--\"",
    "\"^\"",
    "\"=\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\"(\"",
    "\")\"",
    "\"\\\'\"",
    "\"\\\"\"",
    "\";\"",
    "\":\"",
    "<NUMERO>",
    "<IDENTIFICADOR>",
    "<NUMBER>",
    "<CHARAC>",
    "\" \"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\r\\n\"",
    "\"\\t\"",
  };

}
